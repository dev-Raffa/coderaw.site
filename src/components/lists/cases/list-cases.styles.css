:root {
  --card-height: 85vh;
  --top: 80px;
  --card-margin: 4vw;
  --card-top-offset: 1em;
  --outline-width: 0px;
}

#cards {
  /* Make place at bottom, as items will slide to that position*/
  padding-bottom: calc(var(--numcards) * var(--card-top-offset));
  /* Don't include the --card-margin in padding, as that will affect the scroll-timeline*/
  margin-bottom: var(--card-margin);
  list-style: none;
  outline: calc(var(--outline-width) * 10) solid hotpink;

  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: repeat(var(--numcards), var(--card-height));
  gap: var(--card-margin);

  .card {
    position: sticky;
    top: var(--top);
    padding-top: calc(var(--index) * var(--card-top-offset));
    height: var(--card-height);

    &:not(:first-child) {
      padding-top: calc(var(--index) * 4px + 125px);
    }

    .card-header {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      height: 120px;

      p {
        color: white;
      }
    }

    .card-content {
      box-shadow: 0 0.2em 1em rgba(0, 0, 0, 0.1), 0 1em 2em rgba(0, 0, 0, 0.1);
      background: rgba(255, 255, 255, 0.18);
      color: rgb(250, 250, 250);
      border-radius: 1em;
      overflow: hidden;
      width: 90vw;
      max-width: 1100px;
      height: calc(var(--card-height) - 100px);
      max-height: 800px;
      display: flex;
      gap: 8px;
      align-items: stretch;
      
      transform-origin: 50% 0%;
      will-change: transform;

      section {
        width: 65%;
        place-self: center;
        text-align: left;
        height: 100%;
        padding-top: 12px;
        padding-right: 8px;
        display: flex;
        flex-direction: column;
        gap: 18px;
        place-items: start;

        h3 {
          width: 100%;
          font-size: 24px;
          text-align: center;
          font-weight: 500;
        }

        ul {
          gap: 12px;
          height: 100%;

          li {
            h4 {
              font-size: 16px;
            }

            p {
              font-size: 15px;
              font-weight: 300;
              color: rgb(223, 221, 221);
            }
          }
        }

        &::before {
          content: " ";
          height: 100%;
          width: 100%;
          position: absolute;
          top: 0;
          left: 0;
          background-color: rgba(58, 57, 57, 0.767);
          z-index: -1;
        } 
      }

      figure {
        width: 35%;
        overflow: hidden;
        position: relative;
      }
    }
  }

  &:first-child {
    article::before {
      background-color: rgba(255, 255, 255, 0.18);
    }
  }
}

@supports (animation-timeline: view()) {
  .card {
    --index0: calc(var(--index) - 1); /* 0-based index */
    --reverse-index: calc(var(--numcards) - var(--index0)); /* reverse index */
    --reverse-index0: calc(
      var(--reverse-index) - 1
    ); /* 0-based reverse index */
  }

  @keyframes scale {
    to {
      transform: scale(calc(1.1 - calc(0.1 * var(--reverse-index))));
    }
  }

  #cards {
    --numcards: 4;
    view-timeline-name: --cards-element-scrolls-in-body;
  }

  .card__content {
    --start-range: calc(var(--index0) / var(--numcards) * 100%);
    --end-range: calc((var(--index)) / var(--numcards) * 100%);

    animation: linear scale forwards;
    animation-timeline: --cards-element-scrolls-in-body;
    animation-range: exit-crossing var(--start-range) exit-crossing
      var(--end-range);
  }
}
